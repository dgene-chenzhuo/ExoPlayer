# Proguard rules specific to the core module.

# Constant folding for resource integers may mean that a resource passed to this method appears to be unused. Keep the method to prevent this from happening.
-keep class com.google.android.dgenexo.upstream.RawResourceDataSource {
  public static android.net.Uri buildRawResourceUri(int);
}

# Methods accessed via reflection in DefaultExtractorsFactory
-dontnote com.google.android.exoplayer2.ext.flac.FlacLibrary
-keepclassmembers class com.google.android.dgenexo.ext.flac.FlacLibrary {
  public static boolean isAvailable();
}

# Some members of this class are being accessed from native methods. Keep them unobfuscated.
-keep class com.google.android.dgenexo.video.VideoDecoderOutputBuffer {
  *;
}

# Constructors accessed via reflection in DefaultRenderersFactory
-dontnote com.google.android.exoplayer2.ext.vp9.LibvpxVideoRenderer
-keepclassmembers class com.google.android.dgenexo.ext.vp9.LibvpxVideoRenderer {
  <init>(long, android.os.Handler, com.google.android.dgenexo.video.VideoRendererEventListener, int);
}
-dontnote com.google.android.exoplayer2.ext.av1.Libgav1VideoRenderer
-keepclassmembers class com.google.android.dgenexo.ext.av1.Libgav1VideoRenderer {
  <init>(long, android.os.Handler, com.google.android.dgenexo.video.VideoRendererEventListener, int);
}
-dontnote com.google.android.exoplayer2.ext.opus.LibopusAudioRenderer
-keepclassmembers class com.google.android.dgenexo.ext.opus.LibopusAudioRenderer {
  <init>(android.os.Handler, com.google.android.dgenexo.audio.AudioRendererEventListener, com.google.android.dgenexo.audio.AudioProcessor[]);
}
-dontnote com.google.android.exoplayer2.ext.flac.LibflacAudioRenderer
-keepclassmembers class com.google.android.dgenexo.ext.flac.LibflacAudioRenderer {
  <init>(android.os.Handler, com.google.android.dgenexo.audio.AudioRendererEventListener, com.google.android.dgenexo.audio.AudioProcessor[]);
}
-dontnote com.google.android.exoplayer2.ext.ffmpeg.FfmpegAudioRenderer
-keepclassmembers class com.google.android.dgenexo.ext.ffmpeg.FfmpegAudioRenderer {
  <init>(android.os.Handler, com.google.android.dgenexo.audio.AudioRendererEventListener, com.google.android.dgenexo.audio.AudioProcessor[]);
}

# Constructors accessed via reflection in DefaultExtractorsFactory
-dontnote com.google.android.exoplayer2.ext.flac.FlacExtractor
-keepclassmembers class com.google.android.dgenexo.ext.flac.FlacExtractor {
  <init>();
}

# Constructors accessed via reflection in DefaultDataSource
-dontnote com.google.android.exoplayer2.ext.rtmp.RtmpDataSource
-keepclassmembers class com.google.android.dgenexo.ext.rtmp.RtmpDataSource {
  <init>();
}

# Constructors accessed via reflection in DefaultDownloaderFactory
-dontnote com.google.android.exoplayer2.source.dash.offline.DashDownloader
-keepclassmembers class com.google.android.dgenexo.source.dash.offline.DashDownloader {
  <init>(android.net.Uri, java.util.List, com.google.android.dgenexo.offline.DownloaderConstructorHelper);
}
-dontnote com.google.android.exoplayer2.source.hls.offline.HlsDownloader
-keepclassmembers class com.google.android.dgenexo.source.hls.offline.HlsDownloader {
  <init>(android.net.Uri, java.util.List, com.google.android.dgenexo.offline.DownloaderConstructorHelper);
}
-dontnote com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloader
-keepclassmembers class com.google.android.dgenexo.source.smoothstreaming.offline.SsDownloader {
  <init>(android.net.Uri, java.util.List, com.google.android.dgenexo.offline.DownloaderConstructorHelper);
}

# Constructors accessed via reflection in DownloadHelper
-dontnote com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
-keepclasseswithmembers class com.google.android.dgenexo.source.dash.DashMediaSource$Factory {
  <init>(com.google.android.dgenexo.upstream.DataSource$Factory);
}
-dontnote com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
-keepclasseswithmembers class com.google.android.dgenexo.source.hls.HlsMediaSource$Factory {
  <init>(com.google.android.dgenexo.upstream.DataSource$Factory);
}
-dontnote com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
-keepclasseswithmembers class com.google.android.dgenexo.source.smoothstreaming.SsMediaSource$Factory {
  <init>(com.google.android.dgenexo.upstream.DataSource$Factory);
}

# Don't warn about checkerframework and Kotlin annotations
-dontwarn org.checkerframework.**
-dontwarn kotlin.annotations.jvm.**
-dontwarn javax.annotation.**
